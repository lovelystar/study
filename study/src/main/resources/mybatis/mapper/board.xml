<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hard.study.dao.board">
	
	<!-- 글 등록 -->
	<insert id="regBoard" parameterType="com.hard.study.vo.board.BoardVo" useGeneratedKeys="true" keyProperty="idxBoard" keyColumn="idx">
		INSERT INTO board (
			boardName,
			boardDetails
		) VALUES (
			#{boardName},
			#{boardDetails}
		)
	</insert>
	
	<!-- 글 각각 좋아요 수 -->
	<select id="getBoardLike" parameterType="Integer" resultType="Integer">
		SELECT
			COUNT(idx)
		FROM
			board_likes
		WHERE
			idxBoard = #{idxBoard}
	</select>
	
	<!-- 글에 첨부된 파일 -->
	<insert id="regFiles" parameterType="com.hard.study.vo.board.BoardVo">
		INSERT INTO contents (
			idxBoard,
			fileName,
			originalName,
			randomName,
			filePath,
			<!-- fileBytes, -->
			mimeType,
			idxUser,
			idxUserGroup
		) VALUES (
			#{idxBoard},
			#{fileName},
			#{originalName},
			#{randomName},
			#{filePath},
			<!-- #{fileBytes}, -->
			#{mimeType},
			#{idxUser},
			#{idxUserGroup}
		);
	</insert>
	
	<!-- 글 갯수 -->
	<select id="boardTotal" resultType="Integer">
		SELECT
			COUNT(idx)
		FROM
			board
		WHERE
			boardable = 1;
	</select>
	
	<!-- 글 목록 -->
	<select id="getBoard" resultType="com.hard.study.vo.board.BoardVo">
		SELECT
			idx AS idx,
			boardName AS boardName,
			boardDetails AS boardDetails,
			boardViews AS boardViews,
			uptdate AS uptdate
		FROM
			board
		WHERE
			boardable = 1
		ORDER BY
			idx
		DESC
		LIMIT
			#{pageStart}, #{perPageNum};
	</select>
	
	<!-- 글 목록 ( 파일리스트 ) -->
	<select id="getBoardUpld" resultType="com.hard.study.vo.board.BoardVo">
		SELECT
			idx AS idx,
			idxBoard AS idxBoard,
			fileName AS fileName,
			originalName AS originalName,
			randomName AS randomName,
			mimeType AS mimeType,
			idxUser AS idxUser,
			idxUserGroup AS idxUserGroup,
			uptdate AS uptdate
		FROM
			contents
		WHERE
			idxBoard = #{idxBoard}
		ORDER BY
			idx;
	</select>
	
	<!-- 좋아요 목록 ( 유저 리스트 ) -->
	<select id="getBoardLikeUser" resultType="String">
		SELECT
			username
		FROM
			board_likes
		WHERE
			idxBoard = #{idxBoard}
			AND boardType = #{boardType}
	</select>
	
	<!-- 글 조회수 증가 -->
	<update id="boardViews" parameterType="java.util.HashMap">
		<selectKey keyProperty="views" resultType="int" order="BEFORE">
			SELECT
				boardViews AS views
			FROM
				board
			WHERE
				idx = #{idxBoard}
		</selectKey>
		UPDATE
			board
		SET
			boardViews = #{views} + 1
		WHERE
			idx = #{idxBoard}
	</update>
	
	
	<!-- 글 상세 -->
	<select id="getBoardInfo" resultType="java.util.HashMap">
		SELECT
			idx AS idx,
			boardName AS boardName,
			boardDetails AS boardDetails,
			boardViews AS boardViews,
			(
				SELECT
					COUNT(idx)
				FROM
					board_likes
				WHERE
					idxBoard = #{idxBoard}
			) AS boardLikes,
			regdate AS regdate,
			uptdate AS uptdate
		FROM
			board
		WHERE
			boardable = 1
			AND idx = #{idxBoard};
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="addLike" parameterType="com.hard.study.vo.board.BoardLikeVo">
		INSERT INTO
			board_likes (
				idxBoard,
				boardType,
				idxUser,
				idxUserGroup,
				username,
				regdate
			) VALUES (
				#{idxBoard},
				#{boardType},
				#{gmIdx},
				#{grIdx},
				#{username},
				NOW()
			)
	</insert>
	
	<!-- 좋아요 빼기 -->
	<delete id="subLike" parameterType="com.hard.study.vo.board.BoardLikeVo">
		DELETE FROM
			board_likes
		WHERE
			idxBoard = #{idxBoard}
			AND boardType = #{boardType}
			AND idxUser = #{gmIdx}
			AND idxUserGroup = #{grIdx}
			AND username = #{username}
			
	</delete>
</mapper>